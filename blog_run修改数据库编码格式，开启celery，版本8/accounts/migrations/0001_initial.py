# -*- coding: utf-8 -*-
# Generated by Django 1.11.21 on 2019-07-29 13:13
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(blank=True, max_length=64, null=True, verbose_name='昵称')),
                ('integral', models.IntegerField(default=0, verbose_name='用户积分')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户列表',
                'db_table': 'accounts_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoginRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64, verbose_name='登录的用户名')),
                ('ip', models.CharField(max_length=32, verbose_name='ip地址')),
                ('address', models.CharField(blank=True, max_length=32, null=True, verbose_name='登录地址')),
                ('source', models.CharField(blank=True, max_length=32, null=True, verbose_name='登录的来源')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登录的时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_record', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '登录历史',
                'db_table': 'accounts_login_record',
            },
        ),
        migrations.CreateModel(
            name='PasswdChangeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_passwd', models.CharField(max_length=32, verbose_name='未修改的密码')),
                ('new_passwd', models.CharField(max_length=32, verbose_name='修改后的密码')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='修改的时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '密码更改历史',
                'db_table': 'accounts_passwd_change_log',
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(max_length=32, verbose_name='省份')),
                ('city', models.CharField(max_length=32, verbose_name='城市')),
                ('area', models.CharField(max_length=32, verbose_name='区域')),
                ('town', models.CharField(blank=True, max_length=32, null=True, verbose_name='街道')),
                ('address', models.CharField(max_length=64, verbose_name='详细地址')),
                ('username', models.CharField(max_length=32, verbose_name='收件人')),
                ('phone', models.CharField(max_length=32, verbose_name='收件人电话')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否为默认地址')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否为有效地址')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_addr', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '用户地址',
                'db_table': 'accounts_user_address',
                'ordering': ['-is_default', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar', verbose_name='图片')),
                ('real_name', models.CharField(max_length=32, verbose_name='真实姓名')),
                ('email', models.CharField(blank=True, max_length=128, null=True, verbose_name='电子邮箱')),
                ('is_email_valid', models.BooleanField(default=False, verbose_name='邮箱是否验证')),
                ('phone_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机电话')),
                ('is_phone_valid', models.BooleanField(default=False, verbose_name='手机电话是否已经验证')),
                ('gender', models.SmallIntegerField(choices=[(1, '男'), (2, '女'), (3, '保密')], default=3, verbose_name='性别')),
                ('age', models.SmallIntegerField(default=0, verbose_name='年龄')),
                ('level', models.IntegerField(default=0, verbose_name='用户等级')),
                ('qq', models.IntegerField(blank=True, null=True, verbose_name='QQ账号')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '用户详情',
                'db_table': 'accounts_user_profile',
            },
        ),
    ]
